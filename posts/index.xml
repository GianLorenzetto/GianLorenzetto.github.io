<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Gian Lorenzetto</title><link>https://gianlorenzetto.github.io/posts/</link><description>Recent content in Posts on Gian Lorenzetto</description><generator>Hugo -- gohugo.io</generator><language>en-AU</language><lastBuildDate>Tue, 14 Mar 2017 11:08:00 +0800</lastBuildDate><atom:link href="https://gianlorenzetto.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Zombie Scrum and the agile mindset</title><link>https://gianlorenzetto.github.io/posts/zombie-scrum/</link><pubDate>Tue, 14 Mar 2017 11:08:00 +0800</pubDate><guid>https://gianlorenzetto.github.io/posts/zombie-scrum/</guid><description>One problem I&amp;rsquo;ve seen on several occasions now is that of Zombie Scrum, or Scrum-by-numbers. It&amp;rsquo;s an issue whereby someone has implemented Scrum some time back, and the implementation has stagnated.
Symptoms usually include the team doing all the ceremonies correctly, but not yielding the on-going benefits. A lot of practices (especially the daily Scrum) start to feel forced, or lose purpose.
(Note, this isn&amp;rsquo;t limited to Scrum, but Scrum is the one I&amp;rsquo;m most familiar with.</description></item><item><title>Running VS Code From the Command Line in Mac OS X</title><link>https://gianlorenzetto.github.io/posts/running-vscode-from-the-command-line/</link><pubDate>Thu, 15 Sep 2016 15:22:00 +0800</pubDate><guid>https://gianlorenzetto.github.io/posts/running-vscode-from-the-command-line/</guid><description>I&amp;rsquo;m in love with VS Code, I&amp;rsquo;ll admit it. To make the joy complete, I wanted to fire it up from the command line (iTerm 2 of course).
A quick Google resulted in this SO answer.
The TL;DR version - VS Code has a built in Shell Command to add itself to the path!
Pop open the command palette (Cmd + Shift + p) and start typing shell command, this will bring up some options, like so:</description></item><item><title>WebAPI Wildcard In Route</title><link>https://gianlorenzetto.github.io/posts/webpi-route-wildcard/</link><pubDate>Thu, 14 Jul 2016 19:44:00 +0800</pubDate><guid>https://gianlorenzetto.github.io/posts/webpi-route-wildcard/</guid><description>I recently discovered that it&amp;rsquo;s possible to include a wildcard (the * character) in a WebApi route. It looks something like:
[Route(some/route/{*key})] This ASP.Net article has a good example (search for the &amp;lsquo;wildcard&amp;rsquo; section).
Essentially, everything beyond the route/ part of the url will be assigned to the key variable. For example, the route
some/route/more/parts/here?param=1
results in
key = &amp;#34;more/parts/here?param=1&amp;#34;; This can be useful for things like file storage and other uri params that may include folder paths or similar.</description></item><item><title>Http Delete Returning 415 Unsupported Media Type</title><link>https://gianlorenzetto.github.io/posts/http-delete-returning-415-unsupported-media-type/</link><pubDate>Thu, 14 Jul 2016 16:18:00 +0800</pubDate><guid>https://gianlorenzetto.github.io/posts/http-delete-returning-415-unsupported-media-type/</guid><description>When performing an HTTP Delete with a payload, WebAPI needs the content type to be specified, otherwise you&amp;rsquo;re likely to see a 415 - Unsupported Media Type response.
Here&amp;rsquo;s a super simple delete request, with content-type included, for a JSON payload. Obviously, adjust the type to whatever your specific scenario requires.
$http({ method: &amp;#39;DELETE&amp;#39;, url: links.blah.href, headers: { &amp;#39;Accept&amp;#39;: &amp;#39;application/vnd.hal+json&amp;#39;, &amp;#39;Content-Type&amp;#39;: &amp;#39;application/json&amp;#39; }, // &amp;lt;--- content type data: { dataNeededForDelete: someData } });</description></item><item><title>Git Branch Name Capitalisation</title><link>https://gianlorenzetto.github.io/posts/git-branch-name-captitalisation/</link><pubDate>Thu, 14 Jul 2016 16:04:00 +0800</pubDate><guid>https://gianlorenzetto.github.io/posts/git-branch-name-captitalisation/</guid><description>I recently had an odd experience where Git was, seemingly randomly, changing the capitalisation of my branch names. This would happen when performing operations like changing branches and pushing branches.
tl;dr version, git stores branch prefixes like Feature/ in a folder and file systems aren&amp;rsquo;t case-sensitive. You need to delete the offending folder from .git/refs/heads. For a more detailed explanation, read on!
It&amp;rsquo;ll all started when I began using a branch naming scheme like Feature/branch-name and I thought that the Feature prefix may have been the issue &amp;hellip; and it kind of was, just not how I expected :)</description></item><item><title>Git Delete Local Merged Branches</title><link>https://gianlorenzetto.github.io/posts/git-delete-local-merged-branches/</link><pubDate>Thu, 14 Jul 2016 14:26:00 +0800</pubDate><guid>https://gianlorenzetto.github.io/posts/git-delete-local-merged-branches/</guid><description>Every once in a while I like to clean up my local Git repo and remove all of the local branches that have been merged with a branch on the remote. Rather than doing this one branch at a time, here&amp;rsquo;s a PowerShell one liner to do it for you (credit to this SO answer).
git branch --merged | ?{-not ($_ -like &amp;#34;*master&amp;#34;)} | %{git branch -d $_.trim()} It&amp;rsquo;s relatively safe, as it will explicitly ignore master and uses the little-d delete and --merged options.</description></item><item><title>Git Push The Easy Way</title><link>https://gianlorenzetto.github.io/posts/git-push-the-easy-way/</link><pubDate>Thu, 14 Jul 2016 13:55:00 +0800</pubDate><guid>https://gianlorenzetto.github.io/posts/git-push-the-easy-way/</guid><description>Although I&amp;rsquo;m a big fan of Git Extensions on Windows, I still prefer the relative safety of the command line when doing things like pushing to the remote.
Now normally, using say PoshGit, I would type out something like
git push -u origin then cut/paste the branch name from the command prompt. Yes, I know that tab completion can be sort of a friend here, but often it&amp;rsquo;s a little slow and the cut/paste can still be quicker.</description></item><item><title>APIDays 2016 Highlights</title><link>https://gianlorenzetto.github.io/posts/apidays-2016-highlights/</link><pubDate>Thu, 10 Mar 2016 12:40:00 +0000</pubDate><guid>https://gianlorenzetto.github.io/posts/apidays-2016-highlights/</guid><description>My notes and highlights from APIDays 2016 in Melbourne.
Slides are available for most presentations and are linked to from the section headings. You can also get to the slides via the abstract pages for each talk, which you can get to by clicking through the links to each individual talk in the APIDays program.
Steve Sammartino - Welcome to Startup Land # This was the first keynote on day one and kicked things off with some interesting thinking around innovation, what it is, what it means and how it can challenge older / larger organisations who have operated in the same way for a long time.</description></item><item><title>YOW! 2015 Highlights</title><link>https://gianlorenzetto.github.io/posts/yow-2015-highlights/</link><pubDate>Thu, 03 Mar 2016 15:00:00 +0000</pubDate><guid>https://gianlorenzetto.github.io/posts/yow-2015-highlights/</guid><description>Some highlights and a short summary from my attendance at YOW! 2015. All the presentations are online at the YOW! Australia YouTube channel.
Note that the section headings are linked to the corresponding presentation video. I attended the Melbourne conference, but some of the videos are from Sydney or Brisbane events.
Don Reinertsen - Thriving in a Stochastic World # Keynote Day 1 Why deliver the plan? # Don&amp;rsquo;t focus on the plan - the plan has no intrinsic business value.</description></item><item><title>Azure, TeamCity and OctopusDeploy - Part 1</title><link>https://gianlorenzetto.github.io/posts/azure-teamcity-and-octopusdeploy-part-1/</link><pubDate>Sun, 22 Nov 2015 08:44:37 +0000</pubDate><guid>https://gianlorenzetto.github.io/posts/azure-teamcity-and-octopusdeploy-part-1/</guid><description>Recently, Mohamed (a fellow Readifarian) and I spent some time creating a complete build and deployment pipeline. Our main goal was to create a fully functional CI server in Azure, with TeamCity for builds and OctopusDeploy for deployments.
Why? Firstly, although we both had some experience in parts of the technologies involved, neither of us had built a complete end-to-end environment, from scratch. Just sounded like too much fun!
Secondly, during my career as a software developer one of the things I&amp;rsquo;ve noticed is that many sites do not have a fully automated build and deployment environment.</description></item><item><title>Working in a Difficult Environment</title><link>https://gianlorenzetto.github.io/posts/working-in-a-difficult-environment/</link><pubDate>Fri, 30 Oct 2015 00:00:00 +0800</pubDate><guid>https://gianlorenzetto.github.io/posts/working-in-a-difficult-environment/</guid><description>Photo by Rod Long on Unsplash
Making the most of a difficult situation. Toxic Environments # As a developer I&amp;rsquo;ve seen some pretty bad stuff. Staying strong and continuing to enjoy doing the career path I&amp;rsquo;ve chosen for myself hasn&amp;rsquo;t always been easy. Sometimes you&amp;rsquo;re in a toxic environment, could be team mates, management, resources, time pressure or all of the above. You feel trapped and essentially powerless to affect change.</description></item><item><title>Replacing the Windows console with Cmder</title><link>https://gianlorenzetto.github.io/posts/replacing-the-windows-console-with-cmder/</link><pubDate>Fri, 23 Oct 2015 00:00:00 +0000</pubDate><guid>https://gianlorenzetto.github.io/posts/replacing-the-windows-console-with-cmder/</guid><description>In a previous post I talked about [terminal replacements for Mac OS X]({% post_url 2015-10-22-terminal-replacement-on-mac-os-x %}). Unfortunately, on Windows the choices are less numerous.
PowerShell is pretty awesome and on Windows 8/10 it quickly became my default environment, especially with PosGit installed. However, I was still looking for something &amp;hellip; more nix&amp;lsquo;ish.
I tried Babun, but I found the cygwin environment just foreign enough that I wasn&amp;rsquo;t comfortable with it.</description></item></channel></rss>