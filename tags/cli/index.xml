<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cli on Gian Lorenzetto</title><link>/tags/cli/</link><description>Recent content in cli on Gian Lorenzetto</description><generator>Hugo -- gohugo.io</generator><language>en-AU</language><lastBuildDate>Thu, 15 Sep 2016 15:22:00 +0800</lastBuildDate><atom:link href="/tags/cli/index.xml" rel="self" type="application/rss+xml"/><item><title>Running VS Code From the Command Line in Mac OS X</title><link>/posts/running-vscode-from-the-command-line/</link><pubDate>Thu, 15 Sep 2016 15:22:00 +0800</pubDate><guid>/posts/running-vscode-from-the-command-line/</guid><description>I&amp;rsquo;m in love with VS Code, I&amp;rsquo;ll admit it. To make the joy complete, I wanted to fire it up from the command line (iTerm 2 of course).
A quick Google resulted in this SO answer.
The TL;DR version - VS Code has a built in Shell Command to add itself to the path!
Pop open the command palette (Cmd + Shift + p) and start typing shell command, this will bring up some options, like so:</description></item><item><title>Git Branch Name Capitalisation</title><link>/posts/git-branch-name-captitalisation/</link><pubDate>Thu, 14 Jul 2016 16:04:00 +0800</pubDate><guid>/posts/git-branch-name-captitalisation/</guid><description>I recently had an odd experience where Git was, seemingly randomly, changing the capitalisation of my branch names. This would happen when performing operations like changing branches and pushing branches.
tl;dr version, git stores branch prefixes like Feature/ in a folder and file systems aren&amp;rsquo;t case-sensitive. You need to delete the offending folder from .git/refs/heads. For a more detailed explanation, read on!
It&amp;rsquo;ll all started when I began using a branch naming scheme like Feature/branch-name and I thought that the Feature prefix may have been the issue &amp;hellip; and it kind of was, just not how I expected :)</description></item><item><title>Git Delete Local Merged Branches</title><link>/posts/git-delete-local-merged-branches/</link><pubDate>Thu, 14 Jul 2016 14:26:00 +0800</pubDate><guid>/posts/git-delete-local-merged-branches/</guid><description>Every once in a while I like to clean up my local Git repo and remove all of the local branches that have been merged with a branch on the remote. Rather than doing this one branch at a time, here&amp;rsquo;s a PowerShell one liner to do it for you (credit to this SO answer).
git branch --merged | ?{-not ($_ -like &amp;#34;*master&amp;#34;)} | %{git branch -d $_.trim()} It&amp;rsquo;s relatively safe, as it will explicitly ignore master and uses the little-d delete and --merged options.</description></item><item><title>Git Push The Easy Way</title><link>/posts/git-push-the-easy-way/</link><pubDate>Thu, 14 Jul 2016 13:55:00 +0800</pubDate><guid>/posts/git-push-the-easy-way/</guid><description>Although I&amp;rsquo;m a big fan of Git Extensions on Windows, I still prefer the relative safety of the command line when doing things like pushing to the remote.
Now normally, using say PoshGit, I would type out something like
git push -u origin then cut/paste the branch name from the command prompt. Yes, I know that tab completion can be sort of a friend here, but often it&amp;rsquo;s a little slow and the cut/paste can still be quicker.</description></item></channel></rss>